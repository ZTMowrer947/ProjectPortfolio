{
  "projects": [
    {
      "id": 1,
      "project_name": "Random Quote Generator",
      "description": "This project is a random quote generator, where each time the central button is clicked or 30 seconds pass without clicking the button (whichever comes first), the background changes and a new random quote is loaded. Currently, this only operates on a fixed array of quote objects, but could easily be expanded to use a database or API.",
      "technologies": ["HTML", "CSS", "JavaScript"],
      "live_link": "https://ztmowrer947.github.io/fsjs-random-quote-generator",
      "github_link": "https://github.com/ZTMowrer947/fsjs-random-quote-generator",
      "image_urls": {
        "landing": "/images/projects/1/landing.png",
        "gallery": [
          "/images/projects/1/gallery1.png",
          "/images/projects/1/gallery2.png",
          "/images/projects/1/gallery3.png"
        ]
      }
    },
    {
      "id": 2,
      "project_name": "Student List Paginator",
      "description": "This project is concerned with paginating a list of students into a set of 10 students per page (by default). Additionally, students can be searched for by their name and results can be sorted by name or join data in ascending or descending order. Lastly, results can be paginated into varying amounts of students per page. All of these features are added unobtrusively, such that the enitire list of students is displayed when JavaScript is disabled.",
      "technologies": ["HTML", "CSS", "JavaScript"],
      "live_link": "https://ztmowrer947.github.io/student-list-pagination",
      "github_link": "https://github.com/ZTMowrer947/student-list-pagination",
      "image_urls": {
        "landing": "/images/projects/2/landing.png",
        "gallery": [
          "/images/projects/2/gallery1.png",
          "/images/projects/2/gallery2.png",
          "/images/projects/2/gallery3.png"
        ]
      }
    },
    {
      "id": 3,
      "project_name": "Interactive Registration Form",
      "description": "This project involves the unobtrusive addition of validation to a registration form for a made-up conference, Full Stack Conf. When JavaScript is disabled, the form still functions normally.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery"],
      "live_link": "https://ztmowrer947.github.io/interactive-registration-form",
      "github_link": "https://github.com/ZTMowrer947/interactive-registration-form",
      "image_urls": {
        "landing": "/images/projects/3/landing.png",
        "gallery": [
          "/images/projects/3/gallery1.png",
          "/images/projects/3/gallery2.png",
          "/images/projects/3/gallery3.png"
        ]
      }
    },
    {
      "id": 4,
      "project_name": "Phrase Hunter",
      "description": "This project is a simple web-based game similar to that of Hangman in concept. The user must guess a phrase by guessing letters individually, and they must reveal all letters in the phrase before running out of lives. The game also has different levels of difficulty as well as the ability to input guesses using a physical keyboard, alongside the on-screen keyboard. Phrase Hunter was designed from the ground up to take advantage of object-oriented programming features present in the ECMAScript 2015 standard of JavaScript.",
      "technologies": ["HTML", "CSS", "JavaScript", "jQuery", "OOP"],
      "live_link": "https://ztmowrer947.github.io/fsjs-phrase-hunter",
      "github_link": "https://github.com/ZTMowrer947/fsjs-phrase-hunter",
      "image_urls": {
        "landing": "/images/projects/4/landing.png",
        "gallery": [
          "/images/projects/4/gallery1.png",
          "/images/projects/4/gallery2.png",
          "/images/projects/4/gallery3.png"
        ]
      }
    },
    {
      "id": 5,
      "project_name": "Awesome Startup Employee Directory",
      "description": "This project takes advantage of the Random User API to display a set of 12 employees in a directory format. When the employee data is clicked, a modal appears providing more information about that employee, and modal navigation is present to easily switch between employees. Additionally, the user can search for employees by their name. Lastly, there is a dark mode that can be toggled on or off within the site header.",
      "technologies": ["HTML", "CSS", "JavaScript", "Random User API"],
      "live_link": "https://ztmowrer947.github.io/awesome-startup-employee-directory",
      "github_link": "https://github.com/ZTMowrer947/awesome-startup-employee-directory",
      "image_urls": {
        "landing": "/images/projects/5/landing.png",
        "gallery": [
          "/images/projects/5/gallery1.png",
          "/images/projects/5/gallery2.png",
          "/images/projects/5/gallery3.png"
        ]
      }
    },
    {
      "id": 6,
      "project_name": "Flickr Image Gallery",
      "description": "This project utilizes React and the Flickr API to provide an easy-to-use photo gallery. Three default tags are provided and loaded on page load, and a search form is placed directly above it to search for other tags.",
      "technologies": [
        "React",
        "Redux",
        "React Router",
        "Flickr API",
        "Bootstrap",
        "TypeScript"
      ],
      "github_link": "https://github.com/ZTMowrer947/flickr-image-gallery",
      "image_urls": {
        "landing": "/images/projects/6/landing.png",
        "gallery": [
          "/images/projects/6/gallery1.png",
          "/images/projects/6/gallery2.png",
          "/images/projects/6/gallery3.png"
        ]
      }
    },
    {
      "id": 7,
      "project_name": "Library Manager",
      "description": "This project uses the Sequelize ORM and the Express framework to provide a library manager for a book database. Books can be retrieved, created, updated, and delete. Additionally, books can be searched for and sorted by various properties (in ascending or descending order). Forms are validated on both the server-side and client-side.",
      "technologies": ["Express", "Pug", "SQLite", "Sequelize"],
      "github_link": "https://github.com/ZTMowrer947/library-manager",
      "image_urls": {
        "landing": "/images/projects/7/landing.png",
        "gallery": [
          "/images/projects/7/gallery1.png",
          "/images/projects/7/gallery2.png",
          "/images/projects/7/gallery3.png"
        ]
      }
    },
    {
      "id": 8,
      "project_name": "School Database API",
      "description": "This project, powered by the Koa framework and TypeORM, provides a REST API for managing user and course data. Validation is employed to ensure all user and course data is valid, and that only the owner of a course can modify said course. Passwords are securely stored as hashes in the database, and said hashes are not exposed in response data.",
      "technologies": ["Koa", "TypeORM", "SQLite", "TypeScript", "REST"],
      "github_link": "https://github.com/ZTMowrer947/school-database-api",
      "image_urls": {
        "landing": "/images/projects/8/landing.png",
        "gallery": [
          "/images/projects/8/gallery1.png",
          "/images/projects/8/gallery2.png",
          "/images/projects/8/gallery3.png"
        ]
      }
    },
    {
      "id": 9,
      "project_name": "School Database Client",
      "description": "This project utilizes React and the associated School Database API to provide a simple and easy-to-use client for the API, allowing users to create, read, modify, and delete course data.",
      "technologies": [
        "React",
        "React Router",
        "TypeScript",
        "School Database API"
      ],
      "github_link": "https://github.com/ZTMowrer947/react-school-db-client",
      "image_urls": {
        "landing": "/images/projects/9/landing.png",
        "gallery": [
          "/images/projects/9/gallery1.png",
          "/images/projects/9/gallery2.png",
          "/images/projects/9/gallery3.png"
        ]
      }
    }
  ]
}
